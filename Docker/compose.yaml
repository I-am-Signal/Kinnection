services:
  mysql:
    image: mysql:9.0.0
    container_name: "${MYSQL_HOST}"
    hostname: "${MYSQL_HOST}"
    networks:
      default:
        aliases:
          - mysql
    ports:
      - "${MYSQL_EXTERNAL_PORT}:${MYSQL_CONTAINER_PORT}"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ../Kinnection-Database/data/:/var/lib/mysql
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "${MYSQL_HOST}",
          "-u",
          "${MYSQL_USER}",
          "-p${MYSQL_PASSWORD}",
        ]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  aspdotnet:
    build:
      context: ../
      dockerfile: ./Docker/Kinnection-Backend.dockerfile
    networks:
      default:
        aliases:
          - aspdotnet
    container_name: asp
    ports:
      - "${ASP_EXTERNAL_PORT}:${ASP_CONTAINER_PORT}"
    environment:
      ACCESS_DURATION: ${ACCESS_DURATION}
      ANG_EXTERNAL_PORT: ${ANG_EXTERNAL_PORT}
      ANG_PORT_LOCAL: ${ANG_PORT_LOCAL}
      APPLY_MIGRATIONS: ${APPLY_MIGRATIONS}
      ASP_EXTERNAL_PORT: ${ASP_EXTERNAL_PORT}
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ENC_KEY_DUR: ${ENC_KEY_DUR}
      FROM_EMAIL: ${FROM_EMAIL}
      FROM_NAME: ${FROM_NAME}
      HASHING_KEY: ${HASHING_KEY}
      ISSUER: ${ISSUER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_EXTERNAL_PORT: ${MYSQL_EXTERNAL_PORT}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_PROTOCOL: ${MYSQL_PROTOCOL}
      MYSQL_USER: ${MYSQL_USER}
      REFRESH_DURATION: ${REFRESH_DURATION}
      RETRY_ATTEMPTS: ${RETRY_ATTEMPTS}
      RETRY_IN: ${RETRY_IN}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
    depends_on:
      - mysql

  angular:
    build:
      context: ../
      dockerfile: ./Docker/Kinnection-Frontend.dockerfile
    container_name: ang
    ports:
      - "${ANG_EXTERNAL_PORT}:${ANG_CONTAINER_PORT}"
    environment:
      ANG_CONTAINER_PORT: ${ANG_CONTAINER_PORT}
    depends_on:
      - aspdotnet